type Query {
    allBooks: [Book]
    allAuthors: [Author]
    bookById(id: ID!): Book
    authorById(id: ID!): Author
    booksByAuthor(authorId: ID!): [Book]
}

type Mutation {
    createBook(title: String!, isbn: String, pageCount: Int, authorId: ID!): Book
    createAuthor(firstName: String!, lastName: String!, email: String): Author
    updateBook(id: ID!, title: String, isbn: String, pageCount: Int, authorId: ID): Book
    deleteBook(id: ID!): Boolean
}

type Book {
    id: ID!
    title: String!
    isbn: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID!
    firstName: String!
    lastName: String!
    fullName: String!
    email: String
    books: [Book]
}

input BookInput {
    title: String!
    isbn: String
    pageCount: Int
    authorId: ID!
}

input AuthorInput {
    firstName: String!
    lastName: String!
    email: String
}